version: 2.1

orbs:
  orb-tools: circleci/orb-tools@12.1.1

executors:
  default:
    docker:
      - image: cimg/base:current
    resource_class: large

jobs:
  say-hello:
    executor: default
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

  run-node-commands:
    executor: default
    description: |
      Simple drop-in job to run commands for your Node.js application automatically.
    parameters:
      app-dir:
        type: string
        default: "~/project"
        description: >-
          Path to the directory containing your package.json file. Not needed if
          package.json lives in the root.
      artifacts-path:
        type: string
        default: ""
        description: >
          Path to a file or directory to upload to artifacts after running the
          script.
      cache-only-lockfile:
        type: boolean
        default: true
        description: >
          If true, package.json will be ignored in the cache key. Useful for
          projects where package.json changes do not always invalidate dependencies.

          Note: package.json will still be the final fallback key in case a project
          is not configured with a lock file.
      cache-path:
        type: string
        default: ""
        description: >
          By default, this job will utilize 'npm ci' and cache the '~/.npm'
          directory. Override which path to cache with this parameter.

          The cache will be ignored when using npm ci, as the command doesn't
          benefit from cache.
      cache-version:
        type: string
        default: "v1"
        description: >-
          Change the default cache version if you need to clear the cache for any
          reason.
      check-cache:
        type: enum
        enum:
          - never
          - always
          - detect
        default: never
        description: |
          Yarn berry only for Zero install support -
          Use 'always' to always --check-cache argument to yarn install.
          Use 'detect' to enable caching of yarn.lock and to only add when required.
      include-branch-in-cache-key:
        type: boolean
        default: true
        description: |
          If true, this cache bucket will only apply to jobs within the same branch.
      npm-run:
        type: string
        default: ""
        description: >-
          The name of the script within your package.json which you would like to
          run.
      override-ci-command:
        type: string
        default: ""
        description: >
          By default, packages will be installed with "npm ci" or "yarn install
          --frozen-lockfile".

          Optionally supply a custom package installation command, with any
          additional flags needed.
      pkg-manager:
        type: enum
        enum:
          - npm
          - yarn
          - yarn-berry
          - pnpm
        default: npm
        description: "Select the default node package manager to use."
      pnpm-run:
        type: string
        default: ""
        description: >-
          The name of the script within your package.json which you would like to
          run.
      resource_class:
        type: enum
        enum:
          - small
          - medium
          - medium+
          - large
          - xlarge
          - 2xlarge
          - 2xlarge+
        default: large
        description: "Configure the executor resource class"
      setup:
        type: steps
        default: []
        description: >-
          Provide any optional steps you would like to run prior to installing the
          node dependencies. This is a good place to install global modules.
      version:
        type: string
        default: "lts"
        description: >
          Pick a specific cimg/node image version tag:
          https://hub.docker.com/r/cimg/node
      with-cache:
        type: boolean
        default: true
        description: |
          Cache your node packages automatically for faster install times.
          Cache will be ignored when using npm ci.
      yarn-run:
        type: string
        default: ""
        description: >-
          The name of the script within your package.json which you would like to
          run.
    steps:
      - checkout
      - << parameters.setup >>
      - run:
          name: Install Packages
          command: |
            # Example: npm install
            echo "Installing packages..."
      - run:
          name: Run << parameters.pkg-manager >> << parameters.npm-run >>
          command: |
            #!/usr/bin/env bash

            if [[ "<< parameters.pkg-manager >>" == "npm" ]]; then
                npm run "<< parameters.npm-run >>"
            elif [[ "<< parameters.pkg-manager >>" == "pnpm" ]]; then
                pnpm run "<< parameters.pnpm-run >>"
            else
                yarn run "<< parameters.yarn-run >>"
            fi
          environment:
            ORB_PARAM_NPM_RUN: "<< parameters.npm-run >>"
            ORB_PARAM_PKG_MANAGER: "<< parameters.pkg-manager >>"
            ORB_PARAM_PNPM_RUN: "<< parameters.pnpm-run >>"
            ORB_PARAM_YARN_RUN: "<< parameters.yarn-run >>"
          working_directory: "<< parameters.app-dir >>"
      - when:
          condition: "<< parameters.artifacts-path >>"
          steps:
            - store_artifacts:
                path: "<< parameters.artifacts-path >>"

workflows:
  orb-workflow:
    jobs:
      - orb-tools/lint:
          checkout: true
    
      - orb-tools/pack

#      - example-job:
#          docker:
            # replace with your preferred image
#            - image: cimg/base:stable
#          steps:
#            - node/install

  hi-workflow:
    jobs:
      - say-hello
      - run-node-commands:
          app-dir: "~/project"
          # Override other parameters as needed
          # Example:
          # pkg-manager: yarn
          # npm-run: build
